PACKAGE gr.ilsp.nlp.dis.titles.ruta;

// import the types of this type system:
TYPESYSTEM gr.ilsp.types.DISTypeSystem;
TYPESYSTEM gr.ilsp.types.ILSPTypeSystem;

// define and import an external dictionary containing 
WORDLIST SubjectInitsList = 'SubjectInits.txt';

//find the init
Document{-> MARKFAST(SubjectInit, SubjectInitsList)};

// define and import an external dictionary containing 
WORDLIST AddresseeInitsList = 'AddresseeInits.txt';

// # INITS

//find the init
Document{-> MARKFAST(AddresseeInit, AddresseeInitsList)};

// SenderInit via a regex
//find the init
// Document{-> MARKFAST(SenderInit, SenderInitsList)};
(DISDocType|DISDate) Token{REGEXP("^(ΑΠΟ|ΤΟΥ|ΤΗΣ|ΤΩΝ)")-> MARK(SenderInit)};



// FIXME: Right now only the first date is kept. 
// Actually the date matching the date from the table should be kept
// Moreover, there has to be a better way than the following
AddresseeInit{POSITION(gr.ilsp.types.Sentence,1,true)->MARK(TempFirstAnno)};
AddresseeInit{-> UNMARK(AddresseeInit)};
TempFirstAnno{-> MARK(AddresseeInit)};
TempFirstAnno{-> UNMARK(TempFirstAnno)};


// # Boundaries

// First mark all line breaks and DIS annos (so far) as FoundParts that you cannot skip over
(BREAK|SenderInit|AddresseeInit|SubjectInit|DISDocType|DISDate){->MARK(FoundPart)};


// # Extend parts

SenderInit    #{-> DISSender}    FoundPart;
AddresseeInit #{-> DISAddressee} FoundPart;
SubjectInit   #{-> DISSubject}   FoundPart;
    
(SenderInit DISSender{ -> UNMARK(DISSender)}) {-> DISSender};
(AddresseeInit DISAddressee{ -> UNMARK(DISAddressee)}) {-> DISAddressee};

(SubjectInit DISSubject{ -> UNMARK(DISSubject)}){-> DISSubject};
(DISSubject{ -> UNMARK(DISSubject)} DISSubject{ -> UNMARK(DISSubject)}){-> DISSubject};
